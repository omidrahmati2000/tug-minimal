version: '3.8'

services:
  # PostgreSQL Database (Internal only)
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-myfuel_dev}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-myfuel_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Internal only)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-dev@myfuel.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-dev123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal
      - external

  # MyFuel Backend Application (Development with hot reload)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${PORT:-3001}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-myfuel_dev}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      FUEL_STATION_API_KEYS: ${FUEL_STATION_API_KEYS:-station_key_shell_001,station_key_bp_002,station_key_exxon_003,station_key_chevron_004}
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    volumes:
      # Hot reload: Mount source code only, exclude dist and node_modules from Windows host
      - ./src:/app/src:delegated
      - ./test:/app/test:delegated
      - ./nest-cli.json:/app/nest-cli.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.build.json:/app/tsconfig.build.json:ro
      - ./logs:/app/logs:delegated
      - tug_minimal_node_modules:/app/node_modules
      - tug_minimal_dist:/app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal
      - external
    stdin_open: true
    tty: true

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  tug_minimal_node_modules:
    driver: local
  tug_minimal_dist:
    driver: local

networks:
  internal:
    driver: bridge
    internal: true
  external:
    driver: bridge